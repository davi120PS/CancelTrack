// <auto-generated />
using System;
using CancelTrack.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CancelTrack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CancelTrack.Entities.Cliente", b =>
                {
                    b.Property<int>("PKCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("PKCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CancelTrack.Entities.Empleado", b =>
                {
                    b.Property<int>("PKEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("FKPuesto")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("PKEmpleado");

                    b.HasIndex("FKPuesto");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("CancelTrack.Entities.Producto", b =>
                {
                    b.Property<int>("PKProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadInventario")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("FKProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrecioCompra")
                        .HasColumnType("int");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("int");

                    b.HasKey("PKProducto");

                    b.HasIndex("FKProveedor");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("CancelTrack.Entities.Proveedor", b =>
                {
                    b.Property<int>("PKProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("PKProveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("CancelTrack.Entities.Puesto", b =>
                {
                    b.Property<int>("PKPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PKPuesto");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("CancelTrack.Entities.Venta", b =>
                {
                    b.Property<int>("PKVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FKCliente")
                        .HasColumnType("int");

                    b.Property<int?>("FKEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("FKVentaProducto")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("PKVenta");

                    b.HasIndex("FKCliente");

                    b.HasIndex("FKEmpleado");

                    b.HasIndex("FKVentaProducto");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("CancelTrack.Entities.VentaProducto", b =>
                {
                    b.Property<int>("PKVentaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("FKProducto")
                        .HasColumnType("int");

                    b.Property<int?>("FKVentas")
                        .HasColumnType("int");

                    b.HasKey("PKVentaProducto");

                    b.HasIndex("FKProducto");

                    b.HasIndex("FKVentas");

                    b.ToTable("VentaProducto");
                });

            modelBuilder.Entity("CancelTrack.Entities.Empleado", b =>
                {
                    b.HasOne("CancelTrack.Entities.Puesto", "Puestos")
                        .WithMany()
                        .HasForeignKey("FKPuesto");

                    b.Navigation("Puestos");
                });

            modelBuilder.Entity("CancelTrack.Entities.Producto", b =>
                {
                    b.HasOne("CancelTrack.Entities.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("FKProveedor");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("CancelTrack.Entities.Venta", b =>
                {
                    b.HasOne("CancelTrack.Entities.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("FKCliente");

                    b.HasOne("CancelTrack.Entities.Empleado", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleado");

                    b.HasOne("CancelTrack.Entities.VentaProducto", "VentaProductos")
                        .WithMany()
                        .HasForeignKey("FKVentaProducto");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("VentaProductos");
                });

            modelBuilder.Entity("CancelTrack.Entities.VentaProducto", b =>
                {
                    b.HasOne("CancelTrack.Entities.Producto", "Productos")
                        .WithMany()
                        .HasForeignKey("FKProducto");

                    b.HasOne("CancelTrack.Entities.Venta", "Ventas")
                        .WithMany()
                        .HasForeignKey("FKVentas");

                    b.Navigation("Productos");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
